trigger:
  branches:
    include:
      - master

pool:
  name: Ubuntu24-VM-Pool

steps:

  # Step 2: Check Maven and Java versions
  - script: |
      echo "Checking Maven version:"
      mvn -v
      echo "Checking Java version:"
      java -version
    displayName: 'Check Maven and Java Versions'

  # Step 3: Prepare SonarQube for Code Quality Analysis
  - task: SonarQubePrepare@6  # Updated to version 6
    inputs:
      SonarQube: 'my-cnx'  # SonarQube service connection name
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'dishes_dishes_AZKxWlChPzjWCwB_zL8R'  # Replace with your SonarQube project key
      cliProjectVersion: '1.0'
      extraProperties: |
        sonar.java.binaries=target/classes
        sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
    displayName: 'Prepare SonarQube for Code Quality Analysis'

  # Step 4: Build the Java project and generate JaCoCo code coverage report
  - script: |
      mvn clean verify jacoco:report
    displayName: 'Build Java App with Maven and Generate JaCoCo Report'

  # Step 5: Execute SonarQube analysis
  - task: SonarQubeAnalyze@6  # Updated to version 6
    displayName: 'Run SonarQube Analysis'

  # Step 6: Publish JaCoCo test results to Azure DevOps
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml'
    displayName: 'Publish JaCoCo Code Coverage Report'

  # Step 7: Publish SonarQube Quality Gate Results
  - task: SonarQubePublish@6  # Updated to version 6
    displayName: 'Publish SonarQube Quality Gate Result'
